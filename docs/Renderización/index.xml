<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Computación Visual</title><link>https://visualcomputing.github.io/showcase/docs/Renderizaci%C3%B3n/</link><description>Recent content on Computación Visual</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://visualcomputing.github.io/showcase/docs/Renderizaci%C3%B3n/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://visualcomputing.github.io/showcase/docs/Renderizaci%C3%B3n/1.-Baseline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing.github.io/showcase/docs/Renderizaci%C3%B3n/1.-Baseline/</guid><description>Proporcionalidad y simetría # La clave en la ilusión realizada en el juego por la percepción forzada es la proporcionalidad que existe entre el campo de visión y el objeto. El objeto crece tanto como el campo de visión. Esto se puede demostrar con el teorema de proporcionalidad de los triángulos, en los que la razón entre z&amp;rsquo;/z es equivalente a la razón entre x&amp;rsquo;/x, dado que tienen el mismo θ el ángulo del campo de visión:</description></item><item><title/><link>https://visualcomputing.github.io/showcase/docs/Renderizaci%C3%B3n/2.-Densidad-de-pixel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing.github.io/showcase/docs/Renderizaci%C3%B3n/2.-Densidad-de-pixel/</guid><description>El mundo y el pixel # Cada pixel en la pantalla representa una cantidad espacio en el espacio del mundo. La ilusión de la perspectiva forzada permite guardar la relación que existe entre el mundo y el pixel, es decir, la cantidad mundo que puede ser representado en el pixel en el espacio de la pantalla, a esta relación se le va a denominar densidad y es utilizada por la función pixelRatio en el código anteriormente visto.</description></item><item><title/><link>https://visualcomputing.github.io/showcase/docs/Renderizaci%C3%B3n/3.-Aplicaciones/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing.github.io/showcase/docs/Renderizaci%C3%B3n/3.-Aplicaciones/</guid><description>Concept 1 # En el presente ejemplo se realiza una demostración intuitiva de lo que es la percepcion forzada. Se utilizan dos esferas que, a perspectiva, se ven del mismo tamaño. Sin embargo, se puede cambiar el tamaño de una de ellas de tal manera que cambia de tamaño en el mundo, pero la cámara las percive del mismo tamaño. Esto pasa por la distancia en relación con la cámara.</description></item><item><title/><link>https://visualcomputing.github.io/showcase/docs/Renderizaci%C3%B3n/4.-Conslusiones/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing.github.io/showcase/docs/Renderizaci%C3%B3n/4.-Conslusiones/</guid><description>Conclusiones # El juego Superliminal es posible gracias a elementos de la renderización que ocurren en la computación gráfica. Es mediante el proceso de la tubería de renderización que es posible lograr el efecto de percepción forzada sobre los jugadores. A pesar de que un objeto cambie en el mundo, por su ubicación y tamaño en este mismo, este cambio no es percibible en la cámara ni proyectable en la pantalla.</description></item></channel></rss>