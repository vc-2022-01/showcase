<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Computación Visual</title><link>https://visualcomputing.github.io/showcase/docs/Shaders/</link><description>Recent content on Computación Visual</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://visualcomputing.github.io/showcase/docs/Shaders/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://visualcomputing.github.io/showcase/docs/Shaders/3.-Extra-job/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing.github.io/showcase/docs/Shaders/3.-Extra-job/</guid><description>Trabajo extra # En este trabajo se presentan dos distintas apliaciones de los shaders el bump mapping y el shadow mapping.
Bump mapping # Esta es una técnica de textura que permite generar relieves sobre una figura, esto se hace modificando las normales de a superficie.
Los bump maps utilizan la iluminación para generar estos tipos de texturas. Por ejemplo, los colores más claros parececen resaltar de las superficies de la textura, mientras que los colores más oscuros parecen estar hundidos dentro de la superficie.</description></item><item><title/><link>https://visualcomputing.github.io/showcase/docs/Shaders/4.-Conclusions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing.github.io/showcase/docs/Shaders/4.-Conclusions/</guid><description>Conclusiones # Los shaders permiten que la computación gráfica sea más rápida y efectiva. Esto se puede ver reflejado en el procesamiento de imágenes, en el cual, para aplicar un filtro, es necesario hacer transformaciones pixel a pixel. En algunas imágenes estos son millones de tareas por realizar. Por tal motivo, paralelizar estos procesos ha permitido que la apliación de filtros sea más rápida, previniendo demoras que puedan entorpecer la experiencia de usuario.</description></item></channel></rss>