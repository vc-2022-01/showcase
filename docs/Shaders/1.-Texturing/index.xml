<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Computación Visual</title><link>https://visualcomputing.github.io/showcase/docs/Shaders/1.-Texturing/</link><description>Recent content on Computación Visual</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://visualcomputing.github.io/showcase/docs/Shaders/1.-Texturing/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://visualcomputing.github.io/showcase/docs/Shaders/1.-Texturing/Color-brightness/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing.github.io/showcase/docs/Shaders/1.-Texturing/Color-brightness/</guid><description>Color brightness tools # Ejercicio 2: Texture Sampling # El modelo de color HSV ( Hue, Saturation, Value. Por sus siglas en inglés) también es llamado HSB (Hue, Saturation, Brightness - Matiz) fue creado en 1978 por Alvy Ray Smith.
Es una transformación no lineal de color RGB y se usa para progreciones de color, diferente al modelo HSL.
En la imagen podemos ver el cono del modelo HSV, podemos movernos a través del mismo con un vector de 3 dimensiones de forma:</description></item><item><title/><link>https://visualcomputing.github.io/showcase/docs/Shaders/1.-Texturing/Procedural-texturing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing.github.io/showcase/docs/Shaders/1.-Texturing/Procedural-texturing/</guid><description>Procedural texturing # Ejercicio 3 # Las texturas procedimentales son aquellas que se realizan por medio de un una definición matemática. Estas utilizan variables del entorno como el tiempo, la posición del mouse, la posición de los vértices y pixeles entre otras para asignar una textura a una imagen.
Para realizar una textura sobre un objeto es necesario realizar un mapero entra las coordenadas de la figura y el modelo de la figura, siendo este mapeo usualmente lineal.</description></item><item><title/><link>https://visualcomputing.github.io/showcase/docs/Shaders/1.-Texturing/UV-Visualization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing.github.io/showcase/docs/Shaders/1.-Texturing/UV-Visualization/</guid><description>UV vizualization # Ejercicio: UV Vizualization # Mediante este ejercicio se puede demostrar la transformación de las coordenadas UV a un rectángulo. Utilizando las posiciones en las coordenadas de textura UV para mapear el color que toma el pixel en la imágen.</description></item></channel></rss>